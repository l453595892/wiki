// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream.proto

// 包名: pipeline

package pipeline

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 请求数据 Request格式定义
type Request struct {
	Input                []byte   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

// 响应数据Response格式定义
type Response struct {
	Output               []byte   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "pipeline.Request")
	proto.RegisterType((*Response)(nil), "pipeline.Response")
}

func init() { proto.RegisterFile("stream.proto", fileDescriptor_bb17ef3f514bfe54) }

var fileDescriptor_bb17ef3f514bfe54 = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0x29, 0x4a,
	0x4d, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x28, 0xc8, 0x2c, 0x48, 0xcd, 0xc9,
	0xcc, 0x4b, 0x55, 0x92, 0xe7, 0x62, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1,
	0x62, 0xcd, 0xcc, 0x2b, 0x28, 0x2d, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x82, 0x70, 0x94,
	0x94, 0xb8, 0x38, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8, 0xf2,
	0x4b, 0x4b, 0x10, 0x4a, 0xa0, 0x3c, 0x23, 0x57, 0x2e, 0x8e, 0x00, 0xa8, 0x81, 0x42, 0x96, 0x5c,
	0x5c, 0x4e, 0x99, 0x79, 0x29, 0xc1, 0x60, 0xeb, 0x84, 0x04, 0xf5, 0x60, 0x36, 0xe9, 0x41, 0xad,
	0x91, 0x12, 0x42, 0x16, 0x82, 0x18, 0xac, 0xc4, 0xa0, 0xc1, 0x68, 0xc0, 0x98, 0xc4, 0x06, 0x76,
	0x9c, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x04, 0x93, 0x15, 0xac, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PipelineClient is the client API for Pipeline service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PipelineClient interface {
	BindStream(ctx context.Context, opts ...grpc.CallOption) (Pipeline_BindStreamClient, error)
}

type pipelineClient struct {
	cc *grpc.ClientConn
}

func NewPipelineClient(cc *grpc.ClientConn) PipelineClient {
	return &pipelineClient{cc}
}

func (c *pipelineClient) BindStream(ctx context.Context, opts ...grpc.CallOption) (Pipeline_BindStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Pipeline_serviceDesc.Streams[0], "/pipeline.Pipeline/BindStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &pipelineBindStreamClient{stream}
	return x, nil
}

type Pipeline_BindStreamClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type pipelineBindStreamClient struct {
	grpc.ClientStream
}

func (x *pipelineBindStreamClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pipelineBindStreamClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PipelineServer is the server API for Pipeline service.
type PipelineServer interface {
	BindStream(Pipeline_BindStreamServer) error
}

func RegisterPipelineServer(s *grpc.Server, srv PipelineServer) {
	s.RegisterService(&_Pipeline_serviceDesc, srv)
}

func _Pipeline_BindStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PipelineServer).BindStream(&pipelineBindStreamServer{stream})
}

type Pipeline_BindStreamServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type pipelineBindStreamServer struct {
	grpc.ServerStream
}

func (x *pipelineBindStreamServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pipelineBindStreamServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Pipeline_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pipeline.Pipeline",
	HandlerType: (*PipelineServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BindStream",
			Handler:       _Pipeline_BindStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "stream.proto",
}
